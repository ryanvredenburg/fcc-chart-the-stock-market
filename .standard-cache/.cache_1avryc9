{"/app/app/controllers/yahooController.js":{"size":1632,"mtime":1503998664630,"hashOfConfig":"u71bin","results":{"filePath":"/app/app/controllers/yahooController.js","messages":[],"errorCount":0,"warningCount":0,"output":"'use strict'\nconst YahooFinanceAPI = require('yahoo-finance-data')\nconst api = new YahooFinanceAPI({\n  key: process.env.yahooClientId,\n  secret: process.env.yahooClientSecret\n})\n\nfunction getTicker (ticker, callback) {\n  api\n  .getHistoricalData(ticker, '1d', '1mo')\n  .then(function (apiResult) {\n    try {\n      let data = []\n      let timestamps = apiResult.chart.result[0].timestamp\n      let quotes = apiResult.chart.result[0].indicators.quote[0].close\n      let tickerName = apiResult.chart.result[0].meta.symbol\n      for (let i = 0; i < timestamps.length; i++) {\n       // convert yahoo timestamp to millisecond epoch\n        data.push([timestamps[i] * 1000, quotes[i]])\n      }\n\n      let tickerResult = {\n        name: tickerName,\n        data: data,\n        tooltip: { valueDecimals: 2 }\n      }\n      return callback(null, tickerResult)\n    } catch (error) {\n      return callback(new Error('Could Not Process this symbol'))\n    }\n  }, function (error) {\n    return callback(error)\n  })\n}\n\nfunction getTickerArray (tickers, callback) {\n  let chartResult = []\n  let tickerResult = []\n  let callbackCounter = 0\n  for (let i = 0; i < tickers.length; i++) {\n    getTicker(tickers[i], function (error, data) {\n      // on error provide an empty chart\n      if (error) data = []\n      callbackCounter++\n      chartResult.push(data)\n      tickerResult.push({name: tickers[i], error: error})\n      if (callbackCounter === tickers.length) {\n        console.log(chartResult)\n        return callback(null, chartResult, tickerResult)\n      }\n    })\n  }\n}\n\nmodule.exports = {\n  getTicker: getTicker,\n  getTickerArray: getTickerArray\n}\n"}},"/app/app/routes/index.js":{"size":14,"mtime":1503917454849,"hashOfConfig":"u71bin","results":{"filePath":"/app/app/routes/index.js","messages":[],"errorCount":0,"warningCount":0,"output":"'use strict'\n"}}}